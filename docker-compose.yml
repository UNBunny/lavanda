version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: lavanda-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: lavanda_user
      POSTGRES_PASSWORD: lavanda_password
      POSTGRES_MULTIPLE_DATABASES: lavanda_orders,lavanda_inventory
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh:ro
    networks:
      - lavanda-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lavanda_user -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis для кэширования и сессий
  redis:
    image: redis:7-alpine
    container_name: lavanda-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lavanda-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # pgAdmin для управления базой данных
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: lavanda-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@lavanda.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - lavanda-network
    depends_on:
      - postgres

  # Order Management Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: lavanda-order-service
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lavanda_orders
      SPRING_DATASOURCE_USERNAME: lavanda_user
      SPRING_DATASOURCE_PASSWORD: lavanda_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8081:8081"
    networks:
      - lavanda-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/order-service/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Floristic Inventory Service
  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: lavanda-inventory-service
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lavanda_inventory
      SPRING_DATASOURCE_USERNAME: lavanda_user
      SPRING_DATASOURCE_PASSWORD: lavanda_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8082:8082"
    networks:
      - lavanda-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/inventory-service/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx для проксирования и балансировки нагрузки
  nginx:
    image: nginx:alpine
    container_name: lavanda-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx
    networks:
      - lavanda-network
    depends_on:
      - order-service
      - inventory-service

  # Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    container_name: lavanda-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - lavanda-network
    depends_on:
      - order-service
      - inventory-service

  # Grafana для визуализации метрик
  grafana:
    image: grafana/grafana:latest
    container_name: lavanda-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - lavanda-network
    depends_on:
      - prometheus

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  lavanda-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
